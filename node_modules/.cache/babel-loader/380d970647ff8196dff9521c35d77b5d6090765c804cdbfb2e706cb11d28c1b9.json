{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport HeaderPage from \"../components/layout/Header.vue\";\nimport FooterPage from \"../components/layout/Footer.vue\";\nimport TodoItems from \"../components/Todos.vue\";\n//import FilterTool from \"../components/FilterTool.vue\";\n\nexport default {\n  name: \"TasksCompleted\",\n  components: {\n    HeaderPage,\n    FooterPage,\n    TodoItems\n  },\n  data() {\n    return {\n      todos: [],\n      search: [],\n      username: \"undefined\",\n      searchValue: \"\",\n      TodosKey: 0,\n      users: []\n    };\n  },\n  methods: {\n    forceRerender() {\n      this.TodosKey += 1;\n    },\n    archiveTodo(e) {\n      console.log(\"archive received on taskscompleted!\");\n      this.todos.push(e);\n    },\n    deleteItem(id) {\n      this.todos = this.todos.filter(todo => todo.id != id);\n      this.$store.dispatch(\"deleteArchive\", id);\n    },\n    searchResult() {\n      let resultSearch = [];\n      for (let i = 0; i < this.todos.length; i++) {\n        if (this.todos[i].user.toLowerCase().includes(this.searchValue.trim().toLowerCase()) || this.todos[i].title.toLowerCase().includes(this.searchValue.trim().toLowerCase())) {\n          resultSearch.push(this.todos[i]);\n        }\n      }\n      //this.search = this.todos.filter( (todo) => todo.title.toLowerCase().includes(this.searchValue.trim().toLowerCase()) );\n      this.search = resultSearch;\n      console.log(\"search completed!\");\n    },\n    searchUser(input) {\n      let resultSearch = [];\n      for (let i = 0; i < this.todos.length; i++) {\n        if (this.todos[i].user.toLowerCase() == input.trim().toLowerCase()) {\n          resultSearch.push(this.todos[i]);\n        }\n      }\n      //this.search = this.todos.filter( (todo) => todo.title.toLowerCase().includes(this.searchValue.trim().toLowerCase()) );\n      this.search = resultSearch;\n      console.log(\"search user selected completed!\");\n    }\n  },\n  mounted() {\n    this.users = this.$store.state.userList;\n    console.log(this.$store.state.userList);\n    this.todos = this.$store.state.archive;\n    this.search = this.todos;\n    this.username = this.$store.state.user.username;\n  },\n  computed() {}\n};","map":{"version":3,"names":["HeaderPage","FooterPage","TodoItems","name","components","data","todos","search","username","searchValue","TodosKey","users","methods","forceRerender","archiveTodo","e","console","log","push","deleteItem","id","filter","todo","$store","dispatch","searchResult","resultSearch","i","length","user","toLowerCase","includes","trim","title","searchUser","input","mounted","state","userList","archive","computed"],"sources":["src/views/TasksCompleted.vue"],"sourcesContent":["<template>\n  <div class=\"archive pa-6\">\n    <HeaderPage/>\n    <h1>This is the Archive Page</h1>\n    <h1>{{ username }}</h1>\n    <v-toolbar dense>\n            <v-text-field\n                hide-details\n                prepend-icon=\"mdi-magnify\"\n                single-line\n                v-model=\"searchValue\"\n                v-on:keyup.enter=\"searchResult\"\n            ></v-text-field>\n            <v-menu\n            bottom\n            left\n          >\n            <template v-slot:activator=\"{on}\">\n              <v-btn\n              class=\"rounded-xl\"\n                v-on=\"on\"\n              >\n                <v-icon>mdi-dots-vertical</v-icon>\n              </v-btn>\n            </template>\n\n            <v-list>\n              <v-list-item\n                v-for=\"(user, i) in users\"\n                :key=\"i\"\n              >\n                <v-list-item-title @Click=\"searchUser(user)\" >{{ user }}</v-list-item-title>\n              </v-list-item>\n            </v-list>\n          </v-menu>\n            \n    </v-toolbar>\n    <h1>{{ searchValue }}</h1>\n    <TodoItems :key=\"TodosKey\" v-bind:todos=\"search\" @archive=\"archiveTodo\" v-bind:archive=\"true\" v-on:delete-todo=\"deleteItem\"/>\n    <FooterPage/>\n  </div>\n</template>\n\n<script>\nimport HeaderPage from \"../components/layout/Header.vue\";\nimport FooterPage from \"../components/layout/Footer.vue\";\nimport TodoItems from \"../components/Todos.vue\";\n//import FilterTool from \"../components/FilterTool.vue\";\n\nexport default {\n  name: \"TasksCompleted\",\n  components: {\n    HeaderPage,\n    FooterPage,\n    TodoItems,\n  },\n  data () {\n    return {\n      todos: [],\n      search: [],\n      username: \"undefined\",\n      searchValue: \"\",\n      TodosKey: 0,\n      users: [],\n    }\n  },\n  methods: {\n    forceRerender() {\n      this.TodosKey += 1;\n    },\n    archiveTodo(e) {\n      console.log(\"archive received on taskscompleted!\");\n      this.todos.push(e);\n    },\n    deleteItem (id) {\n      this.todos = this.todos.filter( todo => todo.id != id);\n      this.$store.dispatch(\"deleteArchive\", id);\n    },\n    searchResult () {\n      let resultSearch = [];\n      for(let i = 0; i < this.todos.length; i ++ ){\n        if (this.todos[i].user.toLowerCase().includes(this.searchValue.trim().toLowerCase()) || this.todos[i].title.toLowerCase().includes(this.searchValue.trim().toLowerCase())  ) {\n          resultSearch.push(this.todos[i]);\n        }\n      }\n      //this.search = this.todos.filter( (todo) => todo.title.toLowerCase().includes(this.searchValue.trim().toLowerCase()) );\n      this.search = resultSearch;\n      console.log(\"search completed!\"); \n    },\n    searchUser (input) {\n      let resultSearch = [];\n      for(let i = 0; i < this.todos.length; i ++ ){\n        if (this.todos[i].user.toLowerCase() == input.trim().toLowerCase() ) {\n          resultSearch.push(this.todos[i]);\n        }\n      }\n      //this.search = this.todos.filter( (todo) => todo.title.toLowerCase().includes(this.searchValue.trim().toLowerCase()) );\n      this.search = resultSearch;\n      console.log(\"search user selected completed!\"); \n    }\n  },\n  mounted () {\n    \n    this.users = this.$store.state.userList;\n    console.log(this.$store.state.userList);\n    this.todos = this.$store.state.archive;\n    this.search = this.todos;\n    this.username = this.$store.state.user.username\n  },\n  computed () {\n\n  }\n  \n  \n}\n\n</script>\n\n<style>\n\n</style>"],"mappings":";AA4CA,OAAAA,UAAA;AACA,OAAAC,UAAA;AACA,OAAAC,SAAA;AACA;;AAEA;EACAC,IAAA;EACAC,UAAA;IACAJ,UAAA;IACAC,UAAA;IACAC;EACA;EACAG,KAAA;IACA;MACAC,KAAA;MACAC,MAAA;MACAC,QAAA;MACAC,WAAA;MACAC,QAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACAC,cAAA;MACA,KAAAH,QAAA;IACA;IACAI,YAAAC,CAAA;MACAC,OAAA,CAAAC,GAAA;MACA,KAAAX,KAAA,CAAAY,IAAA,CAAAH,CAAA;IACA;IACAI,WAAAC,EAAA;MACA,KAAAd,KAAA,QAAAA,KAAA,CAAAe,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAF,EAAA,IAAAA,EAAA;MACA,KAAAG,MAAA,CAAAC,QAAA,kBAAAJ,EAAA;IACA;IACAK,aAAA;MACA,IAAAC,YAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,QAAArB,KAAA,CAAAsB,MAAA,EAAAD,CAAA;QACA,SAAArB,KAAA,CAAAqB,CAAA,EAAAE,IAAA,CAAAC,WAAA,GAAAC,QAAA,MAAAtB,WAAA,CAAAuB,IAAA,GAAAF,WAAA,YAAAxB,KAAA,CAAAqB,CAAA,EAAAM,KAAA,CAAAH,WAAA,GAAAC,QAAA,MAAAtB,WAAA,CAAAuB,IAAA,GAAAF,WAAA;UACAJ,YAAA,CAAAR,IAAA,MAAAZ,KAAA,CAAAqB,CAAA;QACA;MACA;MACA;MACA,KAAApB,MAAA,GAAAmB,YAAA;MACAV,OAAA,CAAAC,GAAA;IACA;IACAiB,WAAAC,KAAA;MACA,IAAAT,YAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,QAAArB,KAAA,CAAAsB,MAAA,EAAAD,CAAA;QACA,SAAArB,KAAA,CAAAqB,CAAA,EAAAE,IAAA,CAAAC,WAAA,MAAAK,KAAA,CAAAH,IAAA,GAAAF,WAAA;UACAJ,YAAA,CAAAR,IAAA,MAAAZ,KAAA,CAAAqB,CAAA;QACA;MACA;MACA;MACA,KAAApB,MAAA,GAAAmB,YAAA;MACAV,OAAA,CAAAC,GAAA;IACA;EACA;EACAmB,QAAA;IAEA,KAAAzB,KAAA,QAAAY,MAAA,CAAAc,KAAA,CAAAC,QAAA;IACAtB,OAAA,CAAAC,GAAA,MAAAM,MAAA,CAAAc,KAAA,CAAAC,QAAA;IACA,KAAAhC,KAAA,QAAAiB,MAAA,CAAAc,KAAA,CAAAE,OAAA;IACA,KAAAhC,MAAA,QAAAD,KAAA;IACA,KAAAE,QAAA,QAAAe,MAAA,CAAAc,KAAA,CAAAR,IAAA,CAAArB,QAAA;EACA;EACAgC,SAAA,GAEA;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}