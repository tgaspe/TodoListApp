{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport HeaderPage from \"../components/layout/Header.vue\";\nimport FooterPage from \"../components/layout/Footer.vue\";\nimport TodoItems from \"../components/Todos.vue\";\n//import FilterTool from \"../components/FilterTool.vue\";\n\nexport default {\n  name: \"TasksCompleted\",\n  components: {\n    HeaderPage,\n    FooterPage,\n    TodoItems\n  },\n  data() {\n    return {\n      todos: [],\n      search: [],\n      username: \"undefined\",\n      searchValue: \"\",\n      TodosKey: 0\n    };\n  },\n  methods: {\n    forceRerender() {\n      this.TodosKey += 1;\n    },\n    archiveTodo(e) {\n      console.log(\"archive received on taskscompleted!\");\n      this.todos.push(e);\n    },\n    deleteItem(id) {\n      this.todos = this.todos.filter(todo => todo.id != id);\n      this.$store.dispatch(\"deleteArchive\", id);\n    },\n    searchResult() {\n      for (let i = 0; i < this.todos.length; i++) {\n        let resultSearch = [];\n        if (this.todos[i].user.toLowerCase().includes(this.searchValue.trim().toLowerCase()) || this.todos[i].title.toLowerCase().includes(this.searchValue.trim().toLowerCase())) {\n          resultSearch.push(this.todos[i]);\n        }\n        this.search = resultSearch;\n      }\n      //this.search = this.todos.filter( (todo) => todo.title.toLowerCase().includes(this.searchValue.trim().toLowerCase()) );\n      console.log(\"search completed!\");\n    }\n  },\n  mounted() {\n    console.log(this.$store.state.user.username);\n    this.todos = this.$store.state.archive;\n    this.search = this.todos;\n    this.username = this.$store.state.user.username;\n  },\n  computed() {}\n};","map":{"version":3,"names":["HeaderPage","FooterPage","TodoItems","name","components","data","todos","search","username","searchValue","TodosKey","methods","forceRerender","archiveTodo","e","console","log","push","deleteItem","id","filter","todo","$store","dispatch","searchResult","i","length","resultSearch","user","toLowerCase","includes","trim","title","mounted","state","archive","computed"],"sources":["src/views/TasksCompleted.vue"],"sourcesContent":["<template>\n  <div class=\"archive pa-6\">\n    <HeaderPage/>\n    <h1>This is the Archive Page</h1>\n    <h1>{{ username }}</h1>\n    <v-toolbar dense>\n            <v-text-field\n                hide-details\n                prepend-icon=\"mdi-magnify\"\n                single-line\n                v-model=\"searchValue\"\n                v-on:keyup.enter=\"searchResult\"\n            ></v-text-field>\n    \n            <v-btn icon>\n                <v-icon>mdi-dots-vertical</v-icon>\n            </v-btn>\n    </v-toolbar>\n    <h1>{{ searchValue }}</h1>\n    <TodoItems :key=\"TodosKey\" v-bind:todos=\"search\" @archive=\"archiveTodo\" v-bind:archive=\"true\" v-on:delete-todo=\"deleteItem\"/>\n    <FooterPage/>\n  </div>\n</template>\n\n<script>\nimport HeaderPage from \"../components/layout/Header.vue\";\nimport FooterPage from \"../components/layout/Footer.vue\";\nimport TodoItems from \"../components/Todos.vue\";\n//import FilterTool from \"../components/FilterTool.vue\";\n\nexport default {\n  name: \"TasksCompleted\",\n  components: {\n    HeaderPage,\n    FooterPage,\n    TodoItems,\n  },\n  data () {\n    return {\n      todos: [],\n      search: [],\n      username: \"undefined\",\n      searchValue: \"\",\n      TodosKey: 0,\n    }\n  },\n  methods: {\n    forceRerender() {\n      this.TodosKey += 1;\n    },\n    archiveTodo(e) {\n      console.log(\"archive received on taskscompleted!\");\n      this.todos.push(e);\n    },\n    deleteItem (id) {\n      this.todos = this.todos.filter( todo => todo.id != id);\n      this.$store.dispatch(\"deleteArchive\", id);\n    },\n    searchResult () {\n\n      for(let i = 0; i < this.todos.length; i ++ ){\n        let resultSearch = [];\n        if (this.todos[i].user.toLowerCase().includes(this.searchValue.trim().toLowerCase()) || this.todos[i].title.toLowerCase().includes(this.searchValue.trim().toLowerCase())  ) {\n          resultSearch.push(this.todos[i]);\n        }\n        this.search = resultSearch;\n      }\n      //this.search = this.todos.filter( (todo) => todo.title.toLowerCase().includes(this.searchValue.trim().toLowerCase()) );\n      console.log(\"search completed!\"); \n    }\n  },\n  mounted () {\n    console.log(this.$store.state.user.username);\n    this.todos = this.$store.state.archive;\n    this.search = this.todos;\n    this.username = this.$store.state.user.username\n  },\n  computed () {\n\n  }\n  \n  \n}\n\n</script>\n\n<style>\n\n</style>"],"mappings":";AAyBA,OAAAA,UAAA;AACA,OAAAC,UAAA;AACA,OAAAC,SAAA;AACA;;AAEA;EACAC,IAAA;EACAC,UAAA;IACAJ,UAAA;IACAC,UAAA;IACAC;EACA;EACAG,KAAA;IACA;MACAC,KAAA;MACAC,MAAA;MACAC,QAAA;MACAC,WAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACAC,cAAA;MACA,KAAAF,QAAA;IACA;IACAG,YAAAC,CAAA;MACAC,OAAA,CAAAC,GAAA;MACA,KAAAV,KAAA,CAAAW,IAAA,CAAAH,CAAA;IACA;IACAI,WAAAC,EAAA;MACA,KAAAb,KAAA,QAAAA,KAAA,CAAAc,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAF,EAAA,IAAAA,EAAA;MACA,KAAAG,MAAA,CAAAC,QAAA,kBAAAJ,EAAA;IACA;IACAK,aAAA;MAEA,SAAAC,CAAA,MAAAA,CAAA,QAAAnB,KAAA,CAAAoB,MAAA,EAAAD,CAAA;QACA,IAAAE,YAAA;QACA,SAAArB,KAAA,CAAAmB,CAAA,EAAAG,IAAA,CAAAC,WAAA,GAAAC,QAAA,MAAArB,WAAA,CAAAsB,IAAA,GAAAF,WAAA,YAAAvB,KAAA,CAAAmB,CAAA,EAAAO,KAAA,CAAAH,WAAA,GAAAC,QAAA,MAAArB,WAAA,CAAAsB,IAAA,GAAAF,WAAA;UACAF,YAAA,CAAAV,IAAA,MAAAX,KAAA,CAAAmB,CAAA;QACA;QACA,KAAAlB,MAAA,GAAAoB,YAAA;MACA;MACA;MACAZ,OAAA,CAAAC,GAAA;IACA;EACA;EACAiB,QAAA;IACAlB,OAAA,CAAAC,GAAA,MAAAM,MAAA,CAAAY,KAAA,CAAAN,IAAA,CAAApB,QAAA;IACA,KAAAF,KAAA,QAAAgB,MAAA,CAAAY,KAAA,CAAAC,OAAA;IACA,KAAA5B,MAAA,QAAAD,KAAA;IACA,KAAAE,QAAA,QAAAc,MAAA,CAAAY,KAAA,CAAAN,IAAA,CAAApB,QAAA;EACA;EACA4B,SAAA,GAEA;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}